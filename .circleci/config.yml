version: 2.1

jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.0-alphine
        environment: 
          RAILS_ENV: test
          PGHOST: 127.0.0.1
    working_directory: ~/dropshipping-backend
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v

      - restore_cache:
        keys:
          - bundle-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

      - run: 
          name: Bundle Install
          command: bundle install --path vendor/bundle
  
      - save_cache:
          key: bundle-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  test:
    parallelism: 3 
    docker:
      - image: cimg/ruby:2.7-alphine
      - image: circleci/postgres:11.5-alpine 
        environment:
          POSTGRES_DB: dropshipping_test
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: postgres
      RAILS_ENV: test
    working_directory: ~/dropshipping-backend
    steps:
      - checkout
      - restore_cache:
        keys:
          - bundle-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

      - run: 
          name: Bundle Install
          command: bundle install --path vendor/bundle
  
      - save_cache:
          key: bundle-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace

      - run: 
          name: Run Tests
          command: |
            circleci tests glob spec/**/*.rb | circleci tests split --split-by=timings > /tmp/tests-to-run
            bundle exec rspec $(cat /tmp/tests-to-run)

      - store_test_results:
          path: test-results
      
workflows:
  version: 2
  build_and_test:
    jobs:
      - build         
      - test:         
          requires:
            - build 
